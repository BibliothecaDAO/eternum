{
  "name": "scripts",
  "version": "1.0.0",
  "description": "",
  "license": "ISC",
  "author": "",
  "type": "module",
  "main": "deploy.js",
  "config": {
    "dataFileName": "./data/example.json"
  },
  "scripts": {
    "deploy:local": "source ../../../../common/.env.local && bun --env-file=../../../../common/.env.local -e \"import {deployCollectible} from './deploy.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); deployCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "deploy:slot": "source ../../../../common/.env.slot && bun --env-file=../../../../common/.env.slot -e \"import {deployCollectible} from './deploy.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); deployCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "deploy:sepolia": "source ../../../../common/.env.sepolia && bun --env-file=../../../../common/.env.sepolia -e \"import {deployCollectible} from './deploy.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); deployCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "deploy:mainnet": "source ../../../../common/.env.mainnet && bun --env-file=../../../../common/.env.mainnet -e \"import {deployCollectible} from './deploy.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); deployCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "update:local": "source ../../../../common/.env.local && bun --env-file=../../../../common/.env.local -e \"import {updateCollectible} from './update.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); updateCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "update:slot": "source ../../../../common/.env.slot && bun --env-file=../../../../common/.env.slot -e \"import {updateCollectible} from './update.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); updateCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "update:sepolia": "source ../../../../common/.env.sepolia && bun --env-file=../../../../common/.env.sepolia -e \"import {updateCollectible} from './update.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); updateCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "update:mainnet": "source ../../../../common/.env.mainnet && bun --env-file=../../../../common/.env.mainnet -e \"import {updateCollectible} from './update.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); updateCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "mint:local": "source ../../../../common/.env.local && bun --env-file=../../../../common/.env.local -e \"import {mintCollectible} from './mint.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); mintCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "mint:slot": "source ../../../../common/.env.slot && bun --env-file=../../../../common/.env.slot -e \"import {mintCollectible} from './mint.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); mintCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "mint:sepolia": "source ../../../../common/.env.sepolia && bun --env-file=../../../../common/.env.sepolia -e \"import {mintCollectible} from './mint.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); mintCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "mint:mainnet": "source ../../../../common/.env.mainnet && bun --env-file=../../../../common/.env.mainnet -e \"import {mintCollectible} from './mint.js'; import {readFileSync} from 'fs'; const config = JSON.parse(readFileSync('./package.json', 'utf8')); console.log('📁 Using data file:', config.config.dataFileName); mintCollectible(config.config.dataFileName).then(() => process.exit(0)).catch(e => {console.error(e); process.exit(1)})\"",
    "declare:local": "source ../../../../common/.env.local && bun --env-file=../../../../common/.env.local ./declare",
    "declare:slot": "source ../../../../common/.env.slot && bun --env-file=../../../../common/.env.slot ./declare",
    "declare:sepolia": "source ../../../../common/.env.sepolia && bun --env-file=../../../../common/.env.sepolia ./declare",
    "declare:mainnet": "source ../../../../common/.env.mainnet && bun --env-file=../../../../common/.env.mainnet ./declare"
  }
}
