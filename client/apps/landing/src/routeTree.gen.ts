/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TradeCollectionRouteImport } from './routes/trade/$collection/route'

// Create Virtual Routes

const SeasonPassesLazyImport = createFileRoute('/season-passes')()
const MintLazyImport = createFileRoute('/mint')()
const DataLazyImport = createFileRoute('/data')()
const ClaimLazyImport = createFileRoute('/claim')()
const IndexLazyImport = createFileRoute('/')()
const TradeIndexLazyImport = createFileRoute('/trade/')()
const TradeActivityLazyImport = createFileRoute('/trade/activity')()
const TradeCollectionIndexLazyImport = createFileRoute('/trade/$collection/')()
const TradeCollectionActivityLazyImport = createFileRoute(
  '/trade/$collection/activity',
)()

// Create/Update Routes

const SeasonPassesLazyRoute = SeasonPassesLazyImport.update({
  id: '/season-passes',
  path: '/season-passes',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/season-passes.lazy').then((d) => d.Route))

const MintLazyRoute = MintLazyImport.update({
  id: '/mint',
  path: '/mint',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/mint.lazy').then((d) => d.Route))

const DataLazyRoute = DataLazyImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/data.lazy').then((d) => d.Route))

const ClaimLazyRoute = ClaimLazyImport.update({
  id: '/claim',
  path: '/claim',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/claim.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TradeIndexLazyRoute = TradeIndexLazyImport.update({
  id: '/trade/',
  path: '/trade/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/trade/index.lazy').then((d) => d.Route))

const TradeActivityLazyRoute = TradeActivityLazyImport.update({
  id: '/trade/activity',
  path: '/trade/activity',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/trade/activity.lazy').then((d) => d.Route),
)

const TradeCollectionRouteRoute = TradeCollectionRouteImport.update({
  id: '/trade/$collection',
  path: '/trade/$collection',
  getParentRoute: () => rootRoute,
} as any)

const TradeCollectionIndexLazyRoute = TradeCollectionIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TradeCollectionRouteRoute,
} as any).lazy(() =>
  import('./routes/trade/$collection/index.lazy').then((d) => d.Route),
)

const TradeCollectionActivityLazyRoute =
  TradeCollectionActivityLazyImport.update({
    id: '/activity',
    path: '/activity',
    getParentRoute: () => TradeCollectionRouteRoute,
  } as any).lazy(() =>
    import('./routes/trade/$collection/activity.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/claim': {
      id: '/claim'
      path: '/claim'
      fullPath: '/claim'
      preLoaderRoute: typeof ClaimLazyImport
      parentRoute: typeof rootRoute
    }
    '/data': {
      id: '/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataLazyImport
      parentRoute: typeof rootRoute
    }
    '/mint': {
      id: '/mint'
      path: '/mint'
      fullPath: '/mint'
      preLoaderRoute: typeof MintLazyImport
      parentRoute: typeof rootRoute
    }
    '/season-passes': {
      id: '/season-passes'
      path: '/season-passes'
      fullPath: '/season-passes'
      preLoaderRoute: typeof SeasonPassesLazyImport
      parentRoute: typeof rootRoute
    }
    '/trade/$collection': {
      id: '/trade/$collection'
      path: '/trade/$collection'
      fullPath: '/trade/$collection'
      preLoaderRoute: typeof TradeCollectionRouteImport
      parentRoute: typeof rootRoute
    }
    '/trade/activity': {
      id: '/trade/activity'
      path: '/trade/activity'
      fullPath: '/trade/activity'
      preLoaderRoute: typeof TradeActivityLazyImport
      parentRoute: typeof rootRoute
    }
    '/trade/': {
      id: '/trade/'
      path: '/trade'
      fullPath: '/trade'
      preLoaderRoute: typeof TradeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/trade/$collection/activity': {
      id: '/trade/$collection/activity'
      path: '/activity'
      fullPath: '/trade/$collection/activity'
      preLoaderRoute: typeof TradeCollectionActivityLazyImport
      parentRoute: typeof TradeCollectionRouteImport
    }
    '/trade/$collection/': {
      id: '/trade/$collection/'
      path: '/'
      fullPath: '/trade/$collection/'
      preLoaderRoute: typeof TradeCollectionIndexLazyImport
      parentRoute: typeof TradeCollectionRouteImport
    }
  }
}

// Create and export the route tree

interface TradeCollectionRouteRouteChildren {
  TradeCollectionActivityLazyRoute: typeof TradeCollectionActivityLazyRoute
  TradeCollectionIndexLazyRoute: typeof TradeCollectionIndexLazyRoute
}

const TradeCollectionRouteRouteChildren: TradeCollectionRouteRouteChildren = {
  TradeCollectionActivityLazyRoute: TradeCollectionActivityLazyRoute,
  TradeCollectionIndexLazyRoute: TradeCollectionIndexLazyRoute,
}

const TradeCollectionRouteRouteWithChildren =
  TradeCollectionRouteRoute._addFileChildren(TradeCollectionRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/claim': typeof ClaimLazyRoute
  '/data': typeof DataLazyRoute
  '/mint': typeof MintLazyRoute
  '/season-passes': typeof SeasonPassesLazyRoute
  '/trade/$collection': typeof TradeCollectionRouteRouteWithChildren
  '/trade/activity': typeof TradeActivityLazyRoute
  '/trade': typeof TradeIndexLazyRoute
  '/trade/$collection/activity': typeof TradeCollectionActivityLazyRoute
  '/trade/$collection/': typeof TradeCollectionIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/claim': typeof ClaimLazyRoute
  '/data': typeof DataLazyRoute
  '/mint': typeof MintLazyRoute
  '/season-passes': typeof SeasonPassesLazyRoute
  '/trade/activity': typeof TradeActivityLazyRoute
  '/trade': typeof TradeIndexLazyRoute
  '/trade/$collection/activity': typeof TradeCollectionActivityLazyRoute
  '/trade/$collection': typeof TradeCollectionIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/claim': typeof ClaimLazyRoute
  '/data': typeof DataLazyRoute
  '/mint': typeof MintLazyRoute
  '/season-passes': typeof SeasonPassesLazyRoute
  '/trade/$collection': typeof TradeCollectionRouteRouteWithChildren
  '/trade/activity': typeof TradeActivityLazyRoute
  '/trade/': typeof TradeIndexLazyRoute
  '/trade/$collection/activity': typeof TradeCollectionActivityLazyRoute
  '/trade/$collection/': typeof TradeCollectionIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/claim'
    | '/data'
    | '/mint'
    | '/season-passes'
    | '/trade/$collection'
    | '/trade/activity'
    | '/trade'
    | '/trade/$collection/activity'
    | '/trade/$collection/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/claim'
    | '/data'
    | '/mint'
    | '/season-passes'
    | '/trade/activity'
    | '/trade'
    | '/trade/$collection/activity'
    | '/trade/$collection'
  id:
    | '__root__'
    | '/'
    | '/claim'
    | '/data'
    | '/mint'
    | '/season-passes'
    | '/trade/$collection'
    | '/trade/activity'
    | '/trade/'
    | '/trade/$collection/activity'
    | '/trade/$collection/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ClaimLazyRoute: typeof ClaimLazyRoute
  DataLazyRoute: typeof DataLazyRoute
  MintLazyRoute: typeof MintLazyRoute
  SeasonPassesLazyRoute: typeof SeasonPassesLazyRoute
  TradeCollectionRouteRoute: typeof TradeCollectionRouteRouteWithChildren
  TradeActivityLazyRoute: typeof TradeActivityLazyRoute
  TradeIndexLazyRoute: typeof TradeIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ClaimLazyRoute: ClaimLazyRoute,
  DataLazyRoute: DataLazyRoute,
  MintLazyRoute: MintLazyRoute,
  SeasonPassesLazyRoute: SeasonPassesLazyRoute,
  TradeCollectionRouteRoute: TradeCollectionRouteRouteWithChildren,
  TradeActivityLazyRoute: TradeActivityLazyRoute,
  TradeIndexLazyRoute: TradeIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/claim",
        "/data",
        "/mint",
        "/season-passes",
        "/trade/$collection",
        "/trade/activity",
        "/trade/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/claim": {
      "filePath": "claim.lazy.tsx"
    },
    "/data": {
      "filePath": "data.lazy.tsx"
    },
    "/mint": {
      "filePath": "mint.lazy.tsx"
    },
    "/season-passes": {
      "filePath": "season-passes.lazy.tsx"
    },
    "/trade/$collection": {
      "filePath": "trade/$collection/route.tsx",
      "children": [
        "/trade/$collection/activity",
        "/trade/$collection/"
      ]
    },
    "/trade/activity": {
      "filePath": "trade/activity.lazy.tsx"
    },
    "/trade/": {
      "filePath": "trade/index.lazy.tsx"
    },
    "/trade/$collection/activity": {
      "filePath": "trade/$collection/activity.lazy.tsx",
      "parent": "/trade/$collection"
    },
    "/trade/$collection/": {
      "filePath": "trade/$collection/index.lazy.tsx",
      "parent": "/trade/$collection"
    }
  }
}
ROUTE_MANIFEST_END */
